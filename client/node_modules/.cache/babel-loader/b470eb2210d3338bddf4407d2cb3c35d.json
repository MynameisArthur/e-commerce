{"ast":null,"code":"var _jsxFileName = \"C:\\\\Arthur\\\\Coding\\\\Projekty\\\\ztm\\\\e-commerce\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\n\nconst SignUp = () => {\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          confirmPassword = _this$state.confirmPassword,\n          displayName = _this$state.displayName;\n    const signUpStart = this.props.signUpStart;\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  const _this$state2 = this.state,\n        displayName = _this$state2.displayName,\n        email = _this$state2.email,\n        password = _this$state2.password,\n        confirmPassword = _this$state2.confirmPassword;\n  return React.createElement(SignUpContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(SignUpTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"I do not have a account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: this.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: this.handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: this.handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: this.handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: this.handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Arthur/Coding/Projekty/ztm/e-commerce/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","SignUpContainer","SignUpTitle","signUpStart","connect","SignUp","handleSubmit","event","preventDefault","state","email","password","confirmPassword","displayName","props","alert","handleChange","target","name","value","setState","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\nimport {signUpStart} from '../../redux/user/user.actions';\nimport {connect} from 'react-redux';\n\n\nconst SignUp = ()=> {\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {email,password, confirmPassword,displayName } = this.state;\n    const {signUpStart} = this.props;\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }  \n    signUpStart({displayName,email,password});     \n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  \n    const { displayName, email, password, confirmPassword } = this.state;\n    return (\n      <SignUpContainer>\n        <SignUpTitle>I do not have a account</SignUpTitle>\n        <span>Sign up with your email and password</span>\n        <form className='sign-up-form' onSubmit={this.handleSubmit}>\n          <FormInput\n            type='text'\n            name='displayName'\n            value={displayName}\n            onChange={this.handleChange}\n            label='Display Name'\n            required\n          />\n          <FormInput\n            type='email'\n            name='email'\n            value={email}\n            onChange={this.handleChange}\n            label='Email'\n            required\n          />\n          <FormInput\n            type='password'\n            name='password'\n            value={password}\n            onChange={this.handleChange}\n            label='Password'\n            required\n          />\n          <FormInput\n            type='password'\n            name='confirmPassword'\n            value={confirmPassword}\n            onChange={this.handleChange}\n            label='Confirm Password'\n            required\n          />\n          <CustomButton type='submit'>SIGN UP</CustomButton>\n        </form>\n      </SignUpContainer>\n    );\n}\n\nconst mapDispatchToProps = (dispatch)=>({\n  signUpStart: (userCredentials)=>dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null,mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}