{"ast":null,"code":"import _defineProperty from \"C:\\\\Arthur\\\\Coding\\\\Projekty\\\\ztm\\\\e-commerce\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDYI1GQUblyi49uPq_WRaJwc9wWrbNh-UE\",\n  authDomain: \"crwn-db-79d28.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-79d28.firebaseio.com\",\n  projectId: \"crwn-db-79d28\",\n  storageBucket: \"crwn-db-79d28.appspot.com\",\n  messagingSenderId: \"368293631942\",\n  appId: \"1:368293631942:web:31e922f1135bd502da44c7\",\n  measurementId: \"G-LBQCVPE8J0\"\n}; // asynchroniczna funkcja pobierająca obiekt auth i tworząca z niego nowy rekord w bazie w kolekcji \"users\"\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) {\n    return;\n  }\n\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n  const snapShot = await userRef.get();\n  console.log(snapShot.data());\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Arthur/Coding/Projekty/ztm/e-commerce/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","console","log","data","exists","displayName","email","createdAt","Date","set","error","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,+BAFC;AAGbC,EAAAA,WAAW,EAAE,sCAHA;AAIbC,EAAAA,SAAS,EAAE,eAJE;AAKbC,EAAAA,aAAa,EAAE,2BALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE,2CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf,C,CAYA;;AACA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAgBC,cAAhB,KAAiC;AACxE,MAAG,CAACD,QAAJ,EACA;AACE;AACD;;AACD,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,EAAZ;;AAEA,MAAG,CAACJ,QAAQ,CAACK,MAAb,EACA;AAAA,UACSC,WADT,GAC8BZ,QAD9B,CACSY,WADT;AAAA,UACqBC,KADrB,GAC8Bb,QAD9B,CACqBa,KADrB;AAEE,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QACA;AACE,YAAMb,OAAO,CAACc,GAAR;AACJJ,QAAAA,WADI;AAEJC,QAAAA,KAFI;AAGJC,QAAAA;AAHI,SAIDb,cAJC,EAAN;AAMD,KARD,CASA,OAAMgB,KAAN,EACA;AACET,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCQ,KAAK,CAACC,OAAxC;AACD;AACF;;AACD,SAAOhB,OAAP;AACD,CA5BM;AA8BPb,QAAQ,CAAC8B,aAAT,CAAuB7B,MAAvB;AACE,OAAO,MAAM8B,IAAI,GAAG/B,QAAQ,CAAC+B,IAAT,EAAb;AACP,OAAO,MAAMjB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMkB,QAAQ,GAAG,IAAIhC,QAAQ,CAAC+B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAKL,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA9B;AACP,eAAehC,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyDYI1GQUblyi49uPq_WRaJwc9wWrbNh-UE\",\r\n  authDomain: \"crwn-db-79d28.firebaseapp.com\",\r\n  databaseURL: \"https://crwn-db-79d28.firebaseio.com\",\r\n  projectId: \"crwn-db-79d28\",\r\n  storageBucket: \"crwn-db-79d28.appspot.com\",\r\n  messagingSenderId: \"368293631942\",\r\n  appId: \"1:368293631942:web:31e922f1135bd502da44c7\",\r\n  measurementId: \"G-LBQCVPE8J0\"\r\n};\r\n\r\n\r\n// asynchroniczna funkcja pobierająca obiekt auth i tworząca z niego nowy rekord w bazie w kolekcji \"users\"\r\nexport const createUserProfileDocument = async (userAuth,additionalData)=>{\r\n  if(!userAuth)\r\n  {\r\n    return;\r\n  }\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n  const snapShot = await userRef.get();\r\n  console.log(snapShot.data());\r\n\r\n  if(!snapShot.exists)\r\n  {\r\n    const {displayName,email} = userAuth;\r\n    const createdAt = new Date();\r\n    try\r\n    {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalData\r\n      });\r\n    }\r\n    catch(error)\r\n    {\r\n      console.log('error creating user',error.message);      \r\n    }\r\n  }\r\n  return userRef;  \r\n};\r\n\r\nfirebase.initializeApp(config);\r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  provider.setCustomParameters({prompt: 'select_account'});\r\n  export const signInWithGoogle = ()=> auth.signInWithPopup(provider);\r\n  export default firebase;"]},"metadata":{},"sourceType":"module"}