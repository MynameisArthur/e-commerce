{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Arthur\\\\Coding\\\\Projekty\\\\ztm\\\\e-commerce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Arthur\\\\Coding\\\\Projekty\\\\ztm\\\\e-commerce\\\\src\\\\components\\\\with-spinner\\\\with-spinner.component.jsx\";\nimport React from 'react';\nimport { SpinnerOverlay, SpinnerContainer } from './with-spinner.styles';\n\nconst WithSpinner = WrappedComponent => {\n  const Spinner = (_ref) => {\n    let isLoading = _ref.isLoading,\n        otherProps = _objectWithoutProperties(_ref, [\"isLoading\"]);\n\n    return isLoading ? React.createElement(SpinnerOverlay, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }, React.createElement(SpinnerContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    })) : React.createElement(WrappedComponent, Object.assign({}, otherProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }));\n  };\n\n  return Spinner;\n};\n\nexport default WithSpinner;","map":{"version":3,"sources":["C:/Arthur/Coding/Projekty/ztm/e-commerce/src/components/with-spinner/with-spinner.component.jsx"],"names":["React","SpinnerOverlay","SpinnerContainer","WithSpinner","WrappedComponent","Spinner","isLoading","otherProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,cAAR,EAAuBC,gBAAvB,QAA8C,uBAA9C;;AAEA,MAAMC,WAAW,GAAIC,gBAAD,IAAoB;AACpC,QAAMC,OAAO,GAAG,UAA6B;AAAA,QAA3BC,SAA2B,QAA3BA,SAA2B;AAAA,QAAdC,UAAc;;AACzC,WAAOD,SAAS,GAAI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgB,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB,CAAJ,GAA8D,oBAAC,gBAAD,oBAAsBC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA9E;AACH,GAFD;;AAGA,SAAOF,OAAP;AACH,CALD;;AAMA,eAAeF,WAAf","sourcesContent":["import React from 'react';\r\nimport {SpinnerOverlay,SpinnerContainer} from './with-spinner.styles';\r\n\r\nconst WithSpinner = (WrappedComponent)=>{\r\n    const Spinner = ({isLoading,...otherProps})=>{\r\n        return isLoading ? (<SpinnerOverlay><SpinnerContainer /></SpinnerOverlay>) : (<WrappedComponent {...otherProps} />);\r\n    }\r\n    return Spinner;\r\n};\r\nexport default WithSpinner;"]},"metadata":{},"sourceType":"module"}