{"ast":null,"code":"import _objectSpread from \"C:\\\\Arthur\\\\Coding\\\\Projekty\\\\ztm\\\\e-commerce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWthGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWthGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["C:/Arthur/Coding/Projekty/ztm/e-commerce/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","signInSuccess","signInFailure","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWthGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","userSagas"],"mappings":";AAAA,SAAQA,UAAR,EAAmBC,GAAnB,EAAuBC,GAAvB,EAA2BC,IAA3B,QAAsC,oBAAtC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,IAAR,EAAaC,cAAb,EAA4BC,yBAA5B,QAA4D,+BAA5D;AACA,SAAQC,aAAR,EAAsBC,aAAtB,QAA0C,gBAA1C;AAGA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EACP;AACI,MAAG;AACC,UAAMC,OAAO,GAAG,MAAMT,IAAI,CAACI,yBAAD,EAA2BI,QAA3B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMb,GAAG,CAACO,aAAa;AAAEO,MAAAA,EAAE,EAACF,YAAY,CAACE;AAAlB,OAAwBF,YAAY,CAACG,IAAb,EAAxB,EAAd,CAAT;AACH,GAJD,CAIC,OAAMC,KAAN,EAAY;AACT,UAAMhB,GAAG,CAACQ,aAAa,CAACQ,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,eAAV,GACP;AACI,MAAG;AAAA,iBACgB,MAAMb,IAAI,CAACc,eAAL,CAAqBb,cAArB,CADtB;AAAA,UACQc,IADR,QACQA,IADR;;AAEC,UAAMV,uBAAuB,CAACU,IAAD,CAA7B;AACH,GAHD,CAGC,OAAMH,KAAN,EAAY;AACT,UAAMhB,GAAG,CAACQ,aAAa,CAACQ,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUI,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP;AAAT,CAA1B,EACP;AACI,MAAG;AAAA,kBACgB,MAAMnB,IAAI,CAACoB,0BAAL,CAAgCF,KAAhC,EAAsCC,QAAtC,CADtB;AAAA,UACQJ,IADR,SACQA,IADR;;AAEC,UAAMV,uBAAuB,CAACU,IAAD,CAA7B;AACH,GAHD,CAIA,OAAMH,KAAN,EACA;AACI,UAAMhB,GAAG,CAACQ,aAAa,CAACQ,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUS,mBAAV,GACP,CAEC;AAED,OAAO,UAAUC,mBAAV,GACP;AACI,QAAM3B,UAAU,CAACI,eAAe,CAACwB,oBAAjB,EAAsCV,eAAtC,CAAhB;AACH;AACD,OAAO,UAAUW,kBAAV,GACP;AACI,QAAM7B,UAAU,CAACI,eAAe,CAAC0B,mBAAjB,EAAqCT,eAArC,CAAhB;AACH;AAED,OAAO,UAAUU,kBAAV,GACP;AACI,QAAM/B,UAAU,CAACI,eAAe,CAAC4B,kBAAjB,EAAoCN,mBAApC,CAAhB;AACH;AAED,OAAO,UAAUO,SAAV,GACP;AACI,QAAM/B,GAAG,CAAC,CAACC,IAAI,CAACwB,mBAAD,CAAL,EAA2BxB,IAAI,CAAC0B,kBAAD,CAA/B,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest,put,all,call} from 'redux-saga/effects';\r\nimport UserActionTypes from './user.types';\r\nimport {auth,googleProvider,createUserProfileDocument} from '../../firebase/firebase.utils';\r\nimport {signInSuccess,signInFailure} from './user.actions';\r\n\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth)\r\n{\r\n    try{\r\n        const userRef = yield call(createUserProfileDocument,userAuth);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(signInSuccess({id:userSnapshot.id,...userSnapshot.data()}));        \r\n    }catch(error){\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInWthGoogle()\r\n{\r\n    try{\r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user);\r\n    }catch(error){\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({payload:{email,password}})\r\n{\r\n    try{\r\n        const {user} = yield auth.signInWithEmailAndPassword(email,password);\r\n        yield getSnapshotFromUserAuth(user);\r\n    }\r\n    catch(error)\r\n    {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* isUserAuthenticated()\r\n{\r\n    \r\n}\r\n\r\nexport function* onGoogleSignInStart()\r\n{\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,signInWthGoogle);\r\n}\r\nexport function* onEmailSignInStart()\r\n{\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail);\r\n}\r\n\r\nexport function* onCheckUserSession()\r\n{\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION,isUserAuthenticated);\r\n}\r\n\r\nexport function* userSagas()\r\n{\r\n    yield all([call(onGoogleSignInStart),call(onEmailSignInStart)]);\r\n}\r\n \r\n"]},"metadata":{},"sourceType":"module"}