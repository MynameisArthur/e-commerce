{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDYI1GQUblyi49uPq_WRaJwc9wWrbNh-UE\",\n  authDomain: \"crwn-db-79d28.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-79d28.firebaseio.com\",\n  projectId: \"crwn-db-79d28\",\n  storageBucket: \"crwn-db-79d28.appspot.com\",\n  messagingSenderId: \"368293631942\",\n  appId: \"1:368293631942:web:31e922f1135bd502da44c7\",\n  measurementId: \"G-LBQCVPE8J0\"\n}; // asynchroniczna funkcja pobierająca obiekt auth i tworząca z niego nowy rekord w bazie w kolekcji \"users\"\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) {\n    return;\n  } // const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n\n  const userRef = firestore.doc(\"users/12345dfjh}\");\n  console.log(userRef);\n  const snapShot = await userRef.get(); // if(!snapShot.exists)\n  // {\n  //   const {displayName,email} = userAuth;\n  //   const createdAt = new Date();\n  //   try\n  //   {\n  //     await userRef.set({\n  //       displayName,\n  //       email,\n  //       createdAt,\n  //       ...additionalData\n  //     });\n  //   }\n  //   catch(error)\n  //   {\n  //     console.log('error creating user',error.message);      \n  //   }\n  // }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Arthur/Coding/Projekty/ztm/e-commerce/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","console","log","snapShot","get","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,+BAFC;AAGbC,EAAAA,WAAW,EAAE,sCAHA;AAIbC,EAAAA,SAAS,EAAE,eAJE;AAKbC,EAAAA,aAAa,EAAE,2BALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE,2CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf,C,CAYA;;AACA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAgBC,cAAhB,KAAiC;AACxE,MAAG,CAACD,QAAJ,EACA;AACE;AACD,GAJuE,CAKxE;;;AACA,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,oBAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AAEA,QAAMK,QAAQ,GAAG,MAAML,OAAO,CAACM,GAAR,EAAvB,CATwE,CAWxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAON,OAAP;AACD,CA9BM;AAgCPb,QAAQ,CAACoB,aAAT,CAAuBnB,MAAvB;AACE,OAAO,MAAMoB,IAAI,GAAGrB,QAAQ,CAACqB,IAAT,EAAb;AACP,OAAO,MAAMP,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMQ,QAAQ,GAAG,IAAItB,QAAQ,CAACqB,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAKL,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA9B;AACP,eAAetB,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyDYI1GQUblyi49uPq_WRaJwc9wWrbNh-UE\",\r\n  authDomain: \"crwn-db-79d28.firebaseapp.com\",\r\n  databaseURL: \"https://crwn-db-79d28.firebaseio.com\",\r\n  projectId: \"crwn-db-79d28\",\r\n  storageBucket: \"crwn-db-79d28.appspot.com\",\r\n  messagingSenderId: \"368293631942\",\r\n  appId: \"1:368293631942:web:31e922f1135bd502da44c7\",\r\n  measurementId: \"G-LBQCVPE8J0\"\r\n};\r\n\r\n\r\n// asynchroniczna funkcja pobierająca obiekt auth i tworząca z niego nowy rekord w bazie w kolekcji \"users\"\r\nexport const createUserProfileDocument = async (userAuth,additionalData)=>{\r\n  if(!userAuth)\r\n  {\r\n    return;\r\n  }\r\n  // const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n  const userRef = firestore.doc(`users/12345dfjh}`);\r\n  console.log(userRef);\r\n  \r\n  const snapShot = await userRef.get();\r\n\r\n  // if(!snapShot.exists)\r\n  // {\r\n  //   const {displayName,email} = userAuth;\r\n  //   const createdAt = new Date();\r\n  //   try\r\n  //   {\r\n  //     await userRef.set({\r\n  //       displayName,\r\n  //       email,\r\n  //       createdAt,\r\n  //       ...additionalData\r\n  //     });\r\n  //   }\r\n  //   catch(error)\r\n  //   {\r\n  //     console.log('error creating user',error.message);      \r\n  //   }\r\n  // }\r\n  return userRef;  \r\n};\r\n\r\nfirebase.initializeApp(config);\r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  provider.setCustomParameters({prompt: 'select_account'});\r\n  export const signInWithGoogle = ()=> auth.signInWithPopup(provider);\r\n  export default firebase;"]},"metadata":{},"sourceType":"module"}