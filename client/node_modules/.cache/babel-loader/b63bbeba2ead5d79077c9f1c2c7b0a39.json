{"ast":null,"code":"var _jsxFileName = \"C:\\\\Arthur\\\\Coding\\\\Projekty\\\\ztm\\\\e-commerce\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Arthur/Coding/Projekty/ztm/e-commerce/src/pages/shop/shop.component.jsx"],"names":["React","Component","Route","connect","WithSpinner","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","ShopPage","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,SAAR,EAAkBC,+BAAlB,QAAwD,+BAAxD;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;;AAEA,MAAMC,QAAN,SAAuBT,SAAvB,CACA;AAAA;AAAA;AAAA,SAEIU,KAFJ,GAEY;AACNC,MAAAA,OAAO,EAAE;AADH,KAFZ;AAAA,SAMEC,uBANF,GAM4B,IAN5B;AAAA;;AAOEC,EAAAA,iBAAiB,GAAE;AAAA,UACVL,iBADU,GACW,KAAKM,KADhB,CACVN,iBADU;AAEjB,UAAMO,aAAa,GAAGT,SAAS,CAACU,UAAV,CAAqB,aAArB,CAAtB;AACA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAiB;AACvE,YAAMC,cAAc,GAAGZ,+BAA+B,CAACW,QAAD,CAAtD;AACAV,MAAAA,iBAAiB,CAACW,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAE;AAAV,OAAd;AACD,KAJ8B,CAA/B;AAKD;;AACDU,EAAAA,MAAM,GAAE;AAAA,UACCC,KADD,GACU,KAAKR,KADf,CACCQ,KADD;AAEN,WACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKA,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,SAAS,EAAEnB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKkB,KAAK,CAACC,IAAX,mBAAX;AAA4C,MAAA,SAAS,EAAElB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADA;AAMD;;AAxBH;;AA2BA,MAAMmB,kBAAkB,GAAGC,QAAQ,KAAI;AACrCjB,EAAAA,iBAAiB,EAAEW,cAAc,IAAIM,QAAQ,CAACjB,iBAAiB,CAACW,cAAD,CAAlB;AADR,CAAJ,CAAnC;;AAIA,eAAejB,OAAO,CAAC,IAAD,EAAMsB,kBAAN,CAAP,CAAiCf,QAAjC,CAAf","sourcesContent":["import React,{Component} from 'react';\nimport { Route } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport {firestore,convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\nimport {updateCollections} from '../../redux/shop/shop.actions';\n\nclass ShopPage extends Component\n{\n \n    state = {\n      loading: true\n    };\n \n  unsubscribeFromSnapshot = null;\n  componentDidMount(){\n    const {updateCollections} = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot =>{\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot); \n      updateCollections(collectionsMap);    \n      this.setState({loading: false});\n    });\n  }\n  render(){\n    const {match} = this.props;\n    return (\n    <div className='shop-page'>\n      <Route exact path={`${match.path}`} component={CollectionsOverview} />\n      <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n    </div>\n  );\n  }\n}\n\nconst mapDispatchToProps = dispatch =>({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null,mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}