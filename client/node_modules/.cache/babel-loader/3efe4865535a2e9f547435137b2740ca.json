{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    return console.log('fetchCollectionsStartAsync');\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n      this.setState({\n        loading: false\n      });\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:/Arthur/Coding/Projekty/ztm/e-commerce/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","console","log","collectionRef","collection","get","then","snapshot","setState","loading","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAmBC,+BAAnB,QAA0D,+BAA1D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAK;AACtCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADgB,CAAL,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACtDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADgC;AAEtDC,EAAAA,OAAO,EAAEF;AAF6C,CAAL,CAA9C;AAIP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAK;AACpDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBAD8B;AAEpDH,EAAAA,OAAO,EAAEE;AAF2C,CAAL,CAA5C;AAIP,OAAO,MAAME,0BAA0B,GAAG,MAAI;AAE1C,SAAOC,QAAQ,IAAG;AACd,WAAOC,OAAO,CAACC,GAAR,CAAY,4BAAZ,CAAP;AACA,UAAMC,aAAa,GAAGhB,SAAS,CAACiB,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,GAAd,GACCC,IADD,CACMC,QAAQ,IAAE;AACZ,YAAMd,cAAc,GAAGL,+BAA+B,CAACmB,QAAD,CAAtD;AACAP,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACA,WAAKe,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAC;AAAT,OAAd;AACH,KALD,EAMCC,KAND,CAMOC,KAAK,IAAIX,QAAQ,CAACJ,uBAAuB,CAACe,KAAK,CAACC,OAAP,CAAxB,CANxB;AAOH,GAVD;AAWH,CAbM","sourcesContent":["import ShopActionTypes from './shop.types';\r\nimport { firestore,convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nexport const fetchCollectionsStart = ()=>({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_START   \r\n});\r\n\r\nexport const fetchCollectionsSuccess = collectionsMap => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n    payload: collectionsMap\r\n});\r\nexport const fetchCollectionsFailure = errorMessage => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n    payload: errorMessage\r\n});\r\nexport const fetchCollectionsStartAsync = ()=>{\r\n    \r\n    return dispatch =>{\r\n        return console.log('fetchCollectionsStartAsync');\r\n        const collectionRef = firestore.collection('collections');\r\n        collectionRef.get()\r\n        .then(snapshot=>{\r\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n            dispatch(fetchCollectionsSuccess(collectionsMap));\r\n            this.setState({loading:false});\r\n        })\r\n        .catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}