{"ast":null,"code":"import _objectSpread from \"C:\\\\Arthur\\\\Coding\\\\Projekty\\\\ztm\\\\e-commerce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure } from './user.actions';\nexport function* signInWthGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWthGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["C:/Arthur/Coding/Projekty/ztm/e-commerce/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","signInSuccess","signInFailure","signInWthGoogle","signInWithPopup","user","userRef","userSnapshot","get","id","data","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":";AAAA,SAAQA,UAAR,EAAmBC,GAAnB,EAAuBC,GAAvB,EAA2BC,IAA3B,QAAsC,oBAAtC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,IAAR,EAAaC,cAAb,EAA4BC,yBAA5B,QAA4D,+BAA5D;AACA,SAAQC,aAAR,EAAsBC,aAAtB,QAA0C,gBAA1C;AAEA,OAAO,UAAUC,eAAV,GACP;AACI,MAAG;AAAA,iBACgB,MAAML,IAAI,CAACM,eAAL,CAAqBL,cAArB,CADtB;AAAA,UACQM,IADR,QACQA,IADR;;AAEC,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA2BK,IAA3B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACO,aAAa;AAAEQ,MAAAA,EAAE,EAACF,YAAY,CAACE;AAAlB,OAAwBF,YAAY,CAACG,IAAb,EAAxB,EAAd,CAAT;AACH,GALD,CAKC,OAAMC,KAAN,EAAY;AACT,UAAMjB,GAAG,CAACQ,aAAa,CAACS,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP;AAAT,CAA1B,EACP;AACI,MAAG;AAAA,kBACgB,MAAMjB,IAAI,CAACkB,0BAAL,CAAgCF,KAAhC,EAAsCC,QAAtC,CADtB;AAAA,UACQV,IADR,SACQA,IADR;;AAEC,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA2BK,IAA3B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CACLO,aAAa;AAAEQ,MAAAA,EAAE,EAACF,YAAY,CAACE;AAAlB,OAAwBF,YAAY,CAACG,IAAb,EAAxB,EADR,CAAT;AAGH,GAPD,CAQA,OAAMC,KAAN,EACA;AACI,UAAMjB,GAAG,CAACQ,aAAa,CAACS,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUM,mBAAV,GACP;AACI,QAAMxB,UAAU,CAACI,eAAe,CAACqB,oBAAjB,EAAsCf,eAAtC,CAAhB;AACH;AACD,OAAO,UAAUgB,kBAAV,GACP;AACI,QAAM1B,UAAU,CAACI,eAAe,CAACuB,mBAAjB,EAAqCR,eAArC,CAAhB;AACH;AACD,OAAO,UAAUS,SAAV,GACP;AACI,QAAM1B,GAAG,CAAC,CAACC,IAAI,CAACqB,mBAAD,CAAL,EAA2BrB,IAAI,CAACuB,kBAAD,CAA/B,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest,put,all,call} from 'redux-saga/effects';\r\nimport UserActionTypes from './user.types';\r\nimport {auth,googleProvider,createUserProfileDocument} from '../../firebase/firebase.utils';\r\nimport {signInSuccess,signInFailure} from './user.actions';\r\n\r\nexport function* signInWthGoogle()\r\n{\r\n    try{\r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        const userRef = yield call(createUserProfileDocument,user);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(signInSuccess({id:userSnapshot.id,...userSnapshot.data()}));\r\n    }catch(error){\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({payload:{email,password}})\r\n{\r\n    try{\r\n        const {user} = yield auth.signInWithEmailAndPassword(email,password);\r\n        const userRef = yield call(createUserProfileDocument,user);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(\r\n            signInSuccess({id:userSnapshot.id,...userSnapshot.data()})\r\n        );\r\n    }\r\n    catch(error)\r\n    {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart()\r\n{\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,signInWthGoogle);\r\n}\r\nexport function* onEmailSignInStart()\r\n{\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail);\r\n}\r\nexport function* userSagas()\r\n{\r\n    yield all([call(onGoogleSignInStart),call(onEmailSignInStart)]);\r\n}\r\n \r\n"]},"metadata":{},"sourceType":"module"}