{"ast":null,"code":"import _objectSpread from \"C:\\\\Arthur\\\\Coding\\\\Projekty\\\\ztm\\\\e-commerce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWthGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n    yield createUserProfileDocument(user, {\n      displayName\n    });\n    alert('New User Profile Successfuly Created!');\n    yield signInWithEmail({\n      payload: {\n        email,\n        password\n      }\n    });\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWthGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["C:/Arthur/Coding/Projekty/ztm/e-commerce/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWthGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","createUserWithEmailAndPassword","alert","signInAfterSignUp","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest,put,all,call} from 'redux-saga/effects';\r\nimport UserActionTypes from './user.types';\r\nimport {auth,googleProvider,createUserProfileDocument,getCurrentUser} from '../../firebase/firebase.utils';\r\nimport {signInSuccess,signInFailure,signOutSuccess,signOutFailure,signUpSuccess,signUpFailure} from './user.actions';\r\n\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth,additionalData)\r\n{\r\n    try{\r\n        const userRef = yield call(createUserProfileDocument,userAuth,additionalData);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(signInSuccess({id:userSnapshot.id,...userSnapshot.data()}));        \r\n    }catch(error){\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInWthGoogle()\r\n{\r\n    try{\r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user);\r\n    }catch(error){\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({payload:{email,password}})\r\n{\r\n    try{\r\n        const {user} = yield auth.signInWithEmailAndPassword(email,password);\r\n        yield getSnapshotFromUserAuth(user);\r\n    }\r\n    catch(error)\r\n    {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* isUserAuthenticated()\r\n{\r\n    try{\r\n        const userAuth = yield getCurrentUser();\r\n        if(!userAuth) return;\r\n        yield getSnapshotFromUserAuth(userAuth);\r\n    }catch(error){\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\nexport function* signOut()\r\n{\r\n    try{\r\n        yield auth.signOut();\r\n        yield put(signOutSuccess());\r\n    }catch(error){\r\n        yield put(signOutFailure(error));\r\n    }\r\n}\r\nexport function* signUp({payload:{email,password,displayName}})\r\n{   \r\n    try{ \r\n        const { user } = yield auth.createUserWithEmailAndPassword(\r\n              email,\r\n              password\r\n        );     \r\n        yield put(signUpSuccess({user,additionalData:{displayName}}));\r\n        yield createUserProfileDocument(user, { displayName });\r\n        alert('New User Profile Successfuly Created!');\r\n        yield signInWithEmail({payload:{email,password}});\r\n    }catch(error){\r\n        yield put(signUpFailure(error));\r\n    }\r\n}\r\nexport function* signInAfterSignUp({payload: {user,additionalData}})\r\n{\r\n\r\n}\r\n\r\nexport function* onGoogleSignInStart()\r\n{\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,signInWthGoogle);\r\n}\r\nexport function* onEmailSignInStart()\r\n{\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail);\r\n}\r\n\r\nexport function* onCheckUserSession()\r\n{\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION,isUserAuthenticated);\r\n}\r\n\r\nexport function* onSignOutStart()\r\n{\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START,signOut);\r\n}\r\nexport function* onSignUpStart()\r\n{\r\n    yield takeLatest(UserActionTypes.SIGN_UP_START,signUp);\r\n}\r\nexport function* onSignUpSuccess()\r\n{\r\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS,signInAfterSignUp);\r\n}\r\nexport function* userSagas()\r\n{\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart),\r\n        call(isUserAuthenticated),\r\n        call(onSignOutStart),\r\n        call(onSignUpStart)\r\n    ]);\r\n}\r\n \r\n"]},"metadata":{},"sourceType":"module"}