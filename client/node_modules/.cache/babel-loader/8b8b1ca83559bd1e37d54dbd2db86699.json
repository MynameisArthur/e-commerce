{"ast":null,"code":"var _jsxFileName = \"C:\\\\Arthur\\\\Coding\\\\Projekty\\\\ztm\\\\e-commerce\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionFetching = _this$props.isCollectionFetching,\n          isCollecionsLoaded = _this$props.isCollecionsLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isFetchingCollections\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionsLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isFetchingCollections: selectIsCollectionFetching,\n  isCollecionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Arthur/Coding/Projekty/ztm/e-commerce/src/pages/shop/shop.component.jsx"],"names":["React","Component","Route","createStructuredSelector","connect","WithSpinner","CollectionsOverview","CollectionPage","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionsLoaded","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","componentDidMount","props","render","match","isCollectionFetching","isCollecionsLoaded","path","isFetchingCollections","isCollectionsLoaded","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,0BAAR,QAAyC,+BAAzC;AACA,SAAQC,0BAAR,EAAmCC,yBAAnC,QAAmE,iCAAnE;AAEA,MAAMC,8BAA8B,GAAGN,WAAW,CAACC,mBAAD,CAAlD;AACA,MAAMM,yBAAyB,GAAGP,WAAW,CAACE,cAAD,CAA7C;;AAGA,MAAMM,QAAN,SAAuBZ,SAAvB,CACA;AACEa,EAAAA,iBAAiB,GACjB;AAAA,UACSN,0BADT,GACuC,KAAKO,KAD5C,CACSP,0BADT;AAEEA,IAAAA,0BAA0B;AAC3B;;AAEDQ,EAAAA,MAAM,GAAE;AAAA,wBACkD,KAAKD,KADvD;AAAA,UACCE,KADD,eACCA,KADD;AAAA,UACOC,oBADP,eACOA,oBADP;AAAA,UAC4BC,kBAD5B,eAC4BA,kBAD5B;AAEN,WACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKF,KAAK,CAACG,IAAX,CAAjB;AAAoC,MAAA,MAAM,EAAGL,KAAD,IAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEM;AAA3C,SAAsEN,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKE,KAAK,CAACG,IAAX,mBAAX;AAA4C,MAAA,MAAM,EAAGL,KAAD,IAAS,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAE,CAACO;AAAvC,SAAgEP,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADA;AAMD;;AAfH;;AAkBA,MAAMQ,eAAe,GAAGpB,wBAAwB,CAAC;AAC/CkB,EAAAA,qBAAqB,EAAEZ,0BADwB;AAE/CU,EAAAA,kBAAkB,EAAET;AAF2B,CAAD,CAAhD;;AAMA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAI;AACrCjB,EAAAA,0BAA0B,EAAE,MAAKiB,QAAQ,CAACjB,0BAA0B,EAA3B;AADJ,CAAJ,CAAnC;;AAIA,eAAeJ,OAAO,CAACmB,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CX,QAA5C,CAAf","sourcesContent":["import React,{Component} from 'react';\nimport { Route } from 'react-router-dom';\nimport {createStructuredSelector} from 'reselect';\nimport {connect} from 'react-redux';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shop.actions';\nimport {selectIsCollectionFetching,selectIsCollectionsLoaded} from '../../redux/shop/shop.selectors';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\n\nclass ShopPage extends Component\n{\n  componentDidMount()\n  {\n    const {fetchCollectionsStartAsync} = this.props;\n    fetchCollectionsStartAsync();\n  }\n  \n  render(){\n    const {match,isCollectionFetching,isCollecionsLoaded} = this.props;   \n    return (\n    <div className='shop-page'>\n      <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={isFetchingCollections} {...props} />} />\n      <Route path={`${match.path}/:collectionId`} render={(props)=><CollectionPageWithSpinner isLoading={!isCollectionsLoaded} {...props} />}/>\n    </div>\n  );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isFetchingCollections: selectIsCollectionFetching,\n  isCollecionsLoaded: selectIsCollectionsLoaded\n\n\n});\nconst mapDispatchToProps = dispatch =>({\n  fetchCollectionsStartAsync: ()=> dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}